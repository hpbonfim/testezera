name: Deploy Next.js site to GitHub Pages

on:
  push:
    branches: ["stag"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        NODE-VERSION: [16]
        PACKAGE-MANAGER: [pnpm]
        PNPM-VERSION: [7]
        OS: [ubuntu-latest]

    runs-on: ${{ matrix.OS }}

    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: ${{ matrix.PNPM-VERSION }}

      - name: Use Node.js ${{ matrix.NODE-VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.NODE-VERSION }}
          cache: ${{ matrix.PACKAGE-MANAGER }}

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ '**/pnpm-lock.yaml' }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: ${{ runner.os }}-nextjs-${{ '**/pnpm-lock.yaml' }}-

      - name: Install dependencies
        run: ${{ matrix.PACKAGE-MANAGER }} install

      - name: Build with Next.js
        run: ${{ matrix.PACKAGE-MANAGER }} next build

      - name: Static HTML export with Next.js
        run: ${{ matrix.PACKAGE-MANAGER }} next export

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./out

  deploy:
    needs: build

    runs-on: ${{ matrix.OS }}

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
